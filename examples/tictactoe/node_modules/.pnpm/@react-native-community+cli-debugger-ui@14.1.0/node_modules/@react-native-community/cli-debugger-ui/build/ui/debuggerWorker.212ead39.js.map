{"mappings":"ICcQ,EAFF,EACA,EAgBA,EAlBN,WAGQ,EAAY,CAAA,EADd,EAEK,WAED,GAAa,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,mBAGlD,EAAY,CAAA,EACZ,QAAQ,IAAI,CACV,0JAIJ,EAGE,EAAkB,CACpB,yBAA0B,SAAU,CAAO,CAAE,CAAS,MAIhD,EAHJ,IAAK,IAAI,KAAO,EAAQ,MAAM,CAC5B,IAAI,CAAC,EAAI,CAAG,KAAK,KAAK,CAAC,EAAQ,MAAM,CAAC,EAAI,EAG5C,GAAI,CACF,cAAc,EAAQ,GAAG,CAC3B,CAAE,MAAO,EAAK,CACZ,EAAQ,EAAI,OAAO,AACrB,CACA,EAAU,KAAmB,EAC/B,EACA,sBAAuB,SAAU,CAAO,EACtC,EAAkB,EAAQ,eAAe,AAC3C,CACF,EAEO,SAAU,CAAO,EACE,WAApB,GACF,IAGF,IAAI,EAAS,EAAQ,IAAI,CAErB,EAAY,SAAU,CAAM,CAAE,CAAK,EACrC,YAAY,CAAC,QAAS,EAAO,EAAE,CAAE,OAAQ,EAAQ,MAAO,CAAK,EAC/D,EAEI,EAAU,CAAe,CAAC,EAAO,MAAM,CAAC,CAC5C,GAAI,EAEF,EAAQ,EAAQ,OACX,CAEL,IACI,EADA,EAAc,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAEjC,GAAI,CACE,AAA6B,UAA7B,OAAO,kBACT,EAAc,iBAAiB,CAAC,EAAO,MAAM,CAAC,CAAC,KAAK,CAClD,KACA,EAAO,SAAS,EAGlB,EAAQ,yDAEZ,CAAE,MAAO,EAAK,CACZ,EAAQ,EAAI,OAAO,AACrB,QAAU,CACR,EAAU,KAAK,SAAS,CAAC,GAAc,EACzC,CACF,CACF","sources":["<anon>","packages/cli-debugger-ui/src/ui/debuggerWorker.js"],"sourcesContent":["var $c4db422326e7321a$exports = {};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */ /* global __fbBatchedBridge, self, importScripts, postMessage, onmessage: true */ /* eslint no-unused-vars: 0 */ onmessage = function() {\n    var visibilityState;\n    var showVisibilityWarning = function() {\n        var hasWarned = false;\n        return function() {\n            // Wait until `YellowBox` gets initialized before displaying the warning.\n            if (hasWarned || console.warn.toString().includes(\"[native code]\")) return;\n            hasWarned = true;\n            console.warn(\"Remote debugger is in a background tab which may cause apps to perform slowly. Fix this by foregrounding the tab (or opening it in a separate window).\");\n        };\n    }();\n    var messageHandlers = {\n        executeApplicationScript: function(message, sendReply) {\n            for(var key in message.inject)self[key] = JSON.parse(message.inject[key]);\n            var error;\n            try {\n                importScripts(message.url);\n            } catch (err) {\n                error = err.message;\n            }\n            sendReply(null, error);\n        },\n        setDebuggerVisibility: function(message) {\n            visibilityState = message.visibilityState;\n        }\n    };\n    return function(message) {\n        if (visibilityState === \"hidden\") showVisibilityWarning();\n        var object = message.data;\n        var sendReply = function(result, error) {\n            postMessage({\n                replyID: object.id,\n                result: result,\n                error: error\n            });\n        };\n        var handler = messageHandlers[object.method];\n        if (handler) // Special cased handlers\n        handler(object, sendReply);\n        else {\n            // Other methods get called on the bridge\n            var returnValue = [\n                [],\n                [],\n                [],\n                0\n            ];\n            var error;\n            try {\n                if (typeof __fbBatchedBridge === \"object\") returnValue = __fbBatchedBridge[object.method].apply(null, object.arguments);\n                else error = \"Failed to call function, __fbBatchedBridge is undefined\";\n            } catch (err) {\n                error = err.message;\n            } finally{\n                sendReply(JSON.stringify(returnValue), error);\n            }\n        }\n    };\n}();\n\n\n//# sourceMappingURL=debuggerWorker.212ead39.js.map\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/* global __fbBatchedBridge, self, importScripts, postMessage, onmessage: true */\n/* eslint no-unused-vars: 0 */\n\nonmessage = (function () {\n  var visibilityState;\n  var showVisibilityWarning = (function () {\n    var hasWarned = false;\n    return function () {\n      // Wait until `YellowBox` gets initialized before displaying the warning.\n      if (hasWarned || console.warn.toString().includes('[native code]')) {\n        return;\n      }\n      hasWarned = true;\n      console.warn(\n        'Remote debugger is in a background tab which may cause apps to ' +\n          'perform slowly. Fix this by foregrounding the tab (or opening it in ' +\n          'a separate window).',\n      );\n    };\n  })();\n\n  var messageHandlers = {\n    executeApplicationScript: function (message, sendReply) {\n      for (var key in message.inject) {\n        self[key] = JSON.parse(message.inject[key]);\n      }\n      var error;\n      try {\n        importScripts(message.url);\n      } catch (err) {\n        error = err.message;\n      }\n      sendReply(null /* result */, error);\n    },\n    setDebuggerVisibility: function (message) {\n      visibilityState = message.visibilityState;\n    },\n  };\n\n  return function (message) {\n    if (visibilityState === 'hidden') {\n      showVisibilityWarning();\n    }\n\n    var object = message.data;\n\n    var sendReply = function (result, error) {\n      postMessage({replyID: object.id, result: result, error: error});\n    };\n\n    var handler = messageHandlers[object.method];\n    if (handler) {\n      // Special cased handlers\n      handler(object, sendReply);\n    } else {\n      // Other methods get called on the bridge\n      var returnValue = [[], [], [], 0];\n      var error;\n      try {\n        if (typeof __fbBatchedBridge === 'object') {\n          returnValue = __fbBatchedBridge[object.method].apply(\n            null,\n            object.arguments,\n          );\n        } else {\n          error = 'Failed to call function, __fbBatchedBridge is undefined';\n        }\n      } catch (err) {\n        error = err.message;\n      } finally {\n        sendReply(JSON.stringify(returnValue), error);\n      }\n    }\n  };\n})();\n"],"names":["hasWarned","visibilityState","showVisibilityWarning","messageHandlers","onmessage","console","warn","toString","includes","executeApplicationScript","message","sendReply","error","key","inject","self","JSON","parse","importScripts","url","err","setDebuggerVisibility","object","data","result","postMessage","replyID","id","handler","method","returnValue","__fbBatchedBridge","apply","arguments","stringify"],"version":3,"file":"debuggerWorker.212ead39.js.map"}
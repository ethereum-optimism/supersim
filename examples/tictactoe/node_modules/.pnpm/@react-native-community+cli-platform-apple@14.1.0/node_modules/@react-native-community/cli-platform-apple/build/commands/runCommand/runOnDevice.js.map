{"version":3,"names":["runOnDevice","selectedDevice","platform","mode","scheme","xcodeProject","args","binaryPath","type","CLIError","isIOSDeployInstalled","child_process","spawnSync","encoding","error","chalk","bold","buildOutput","buildProject","udid","buildSettings","getBuildSettings","appPath","getBuildPath","appProcess","spawn","detached","stdio","unref","iosDeployInstallArgs","logger","info","name","iosDeployOutput","message","success"],"sources":["../../../src/commands/runCommand/runOnDevice.ts"],"sourcesContent":["import child_process from 'child_process';\nimport {ApplePlatform, Device} from '../../types';\nimport {IOSProjectInfo} from '@react-native-community/cli-types';\nimport {CLIError, logger} from '@react-native-community/cli-tools';\nimport chalk from 'chalk';\nimport {buildProject} from '../buildCommand/buildProject';\nimport {getBuildPath} from './getBuildPath';\nimport {FlagsT} from './createRun';\nimport {getBuildSettings} from './getBuildSettings';\n\nexport async function runOnDevice(\n  selectedDevice: Device,\n  platform: ApplePlatform,\n  mode: string,\n  scheme: string,\n  xcodeProject: IOSProjectInfo,\n  args: FlagsT,\n) {\n  if (args.binaryPath && selectedDevice.type === 'catalyst') {\n    throw new CLIError(\n      'binary-path was specified for catalyst device, which is not supported.',\n    );\n  }\n\n  const isIOSDeployInstalled = child_process.spawnSync(\n    'ios-deploy',\n    ['--version'],\n    {encoding: 'utf8'},\n  );\n\n  if (isIOSDeployInstalled.error) {\n    throw new CLIError(\n      `Failed to install the app on the device because we couldn't execute the \"ios-deploy\" command. Please install it by running \"${chalk.bold(\n        'brew install ios-deploy',\n      )}\" and try again.`,\n    );\n  }\n\n  if (selectedDevice.type === 'catalyst') {\n    const buildOutput = await buildProject(\n      xcodeProject,\n      platform,\n      selectedDevice.udid,\n      mode,\n      scheme,\n      args,\n    );\n\n    const buildSettings = await getBuildSettings(\n      xcodeProject,\n      mode,\n      buildOutput,\n      scheme,\n    );\n\n    if (!buildSettings) {\n      throw new CLIError('Failed to get build settings for your project');\n    }\n\n    const appPath = await getBuildPath(buildSettings, platform, true);\n    const appProcess = child_process.spawn(`${appPath}/${scheme}`, [], {\n      detached: true,\n      stdio: 'ignore',\n    });\n    appProcess.unref();\n  } else {\n    let buildOutput, appPath;\n    if (!args.binaryPath) {\n      buildOutput = await buildProject(\n        xcodeProject,\n        platform,\n        selectedDevice.udid,\n        mode,\n        scheme,\n        args,\n      );\n\n      const buildSettings = await getBuildSettings(\n        xcodeProject,\n        mode,\n        buildOutput,\n        scheme,\n      );\n\n      if (!buildSettings) {\n        throw new CLIError('Failed to get build settings for your project');\n      }\n\n      appPath = await getBuildPath(buildSettings, platform);\n    } else {\n      appPath = args.binaryPath;\n    }\n\n    const iosDeployInstallArgs = [\n      '--bundle',\n      appPath,\n      '--id',\n      selectedDevice.udid,\n      '--justlaunch',\n    ];\n\n    logger.info(`Installing and launching your app on ${selectedDevice.name}`);\n\n    const iosDeployOutput = child_process.spawnSync(\n      'ios-deploy',\n      iosDeployInstallArgs,\n      {encoding: 'utf8'},\n    );\n\n    if (iosDeployOutput.error) {\n      throw new CLIError(\n        `Failed to install the app on the device. We've encountered an error in \"ios-deploy\" command: ${iosDeployOutput.error.message}`,\n      );\n    }\n  }\n\n  return logger.success('Installed the app on the device.');\n}\n"],"mappings":"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"}